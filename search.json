[{"path":"https://gilesjohnr.github.io/es.dhaka/articles/processing_es_data.html","id":"install-package","dir":"Articles","previous_headings":"","what":"Install package","title":"Processing data with the `es.dhaka` package","text":"","code":"install.packages('devtools') devtools::install_github('gilesjohnr/es.dhaka', dependencies=TRUE) library(es.dhaka)"},{"path":"https://gilesjohnr.github.io/es.dhaka/articles/processing_es_data.html","id":"parse-card-level-tac-data","dir":"Articles","previous_headings":"","what":"Parse card level TAC data","title":"Processing data with the `es.dhaka` package","text":"Output includes original .xls files: reconfigured .csv files containing raw data:","code":"root <- '{path to Dropbox}/ES TAC/'  paths_xls <- c(      file.path(root, \"BEED TAC/EXCEL\"),      file.path(root, \"ES080217432 - ES090317455 TAC Cards/Excel\"),      file.path(root, \"G- TAC Cards for Polio ES/Excel\"),      file.path(root, \"Qadri Enteric TAC/EXCEL\"),      file.path(root, \"KEPS TAC/EXCEL\") )  parse_tac_xls(path_in = paths_xls,               path_out = \"./test/tac\",               verbose = TRUE)  [==============================================] 100% | Elapsed: 00:01:16 | Remaining:  0s  Input .xls files: 312 Parsed .csv files: 305 Output here: /Users/johngiles/test/tac/raw/csv Warning messages: 1: In parse_tac_xls(path_in = paths_xls, path_out = \"./test/tac\",  :   File exclude due to >1 sheet:  ./Qadri Enteric TAC/EXCEL/2022-04-03 ES QADRI ENTERIC CARD 111.xls 2: In parse_tac_xls(path_in = paths_xls, path_out = \"./test/tac\",  :   File exclude due to >1 sheet:  ./Qadri Enteric TAC/EXCEL/2022-04-05 ES QADRI ENTERIC CARD 112.xls 3: In parse_tac_xls(path_in = paths_xls, path_out = \"./test/tac\",  :   File exclude due to >1 sheet:  ./Qadri Enteric TAC/EXCEL/2022-04-06 ES QADRI ENTERIC CARD 113.xls 4: In parse_tac_xls(path_in = paths_xls, path_out = \"./test/tac\",  :   File exclude due to >1 sheet:  ./KEPS TAC/EXCEL/2023-06-06 KEPS CARD for QADRI ENTERIC CARD 27.xls 5: In parse_tac_xls(path_in = paths_xls, path_out = \"./test/tac\",  :   File exclude due to >1 sheet:  ./KEPS TAC/EXCEL/2023-06-09_KEPS_Std1.xls 6: In parse_tac_xls(path_in = paths_xls, path_out = \"./test/tac\",  :   File exclude due to >1 sheet:  ./KEPS TAC/EXCEL/2023-06-09_KEPS_Std2.xls 7: In parse_tac_xls(path_in = paths_xls, path_out = \"./test/tac\",  :   File exclude due to >1 sheet:  ./KEPS TAC/EXCEL/2023-06-09_KEPS_Std3.xls"},{"path":"https://gilesjohnr.github.io/es.dhaka/articles/processing_es_data.html","id":"compile-tac-data","dir":"Articles","previous_headings":"","what":"Compile TAC data","title":"Processing data with the `es.dhaka` package","text":"Compiling card-level .csv files single data set requires key_target_names data dictionary shown : Multiple QC steps performed compilation:","code":"head(es.dhaka::key_target_names)    target_name_unique target_name_concise control include 1                18S                 18S      NA       1 2   Adenovirus 40/41    Adenovirus_40_41    PhHV       1 4   Adenovirus_40_41    Adenovirus_40_41    PhHV       1 5   Adenovirus_40-41    Adenovirus_40_41    PhHV       1 3     Adenovirus pan      Adenovirus_pan    PhHV       1 6          Aeromonas           Aeromonas    PhHV       1 compile_tac_data(path_in = \"./test/tac/raw/csv\",                  path_out = \"./test/tac\",                  key = es.dhaka::key_target_names,                  tau = 40,                  verbose = TRUE)  Precheck .csv files Loading .csv files Removing excluded targets Fixing duplicated target names [==============================================] 100% | Elapsed: 00:02:04 | Remaining:  0s  Editing ct_value responses based on contamination controls Samples blanks with contaminated observations: 90  [1] \"BLANK 17.06.2019\" \"BLANK 24.06.2019\" \"BLANK 27.06.2019\" \"BLANK 03.07.2019\"  [5] \"BLANK 07.07.2019\" \"BLANK 10.07.2019\" \"BLANK 17.07.2019\" \"BLANK 23.07.2019\"  [9] \"Blank 18.08.2019\" \"BLANK 01.09.2019\" \"BLANK 08.09.19\"   \"Blank 15.09.19\"   [13] \"blank 1.10.2019\"  \"BLANK 19.12.12\"   \"BLANK 03.02.20\"   \"BLANK 13.05.20\"   [17] \"BLANK 08.11.2020\" \"Blank 16.11.20\"   \"Blank 24.11.20\"   \"Blank 06.12.2020\" [21] \"BLANK 14.12.20\"   \"Blank 20.12.20\"   \"BLANK 29.12.2020\" \"Blank 03.01.2021\" [25] \"BLANK 12.01.2021\" \"BLANK 17.01.2021\" \"BLANK 24.01.2021\" \"Blank 28.01.2021\" [29] \"BLANK 04.02.2021\" \"Blank 09.02.2021\" \"BLANK 15.02.2021\" \"BLANK 18.02.2020\" [33] \"BLANK 23.02.2021\" \"Blank-01032021\"   \"Blank 07.03.2021\" \"BLANK 11.03.2021\" [37] \"BLANK 16.03.21\"   \"Blank 23.03.21\"   \"Blank 28.03.2021\" \"Blank 05.04.2021\" [41] \"Blank 11.04.2021\" \"BLANK 13.04.2021\" \"BLANK 22.04.2021\" \"BLANK 25.04.2021\" [45] \"BLANK 08.05.2021\" \"BLANK 05.05.2021\" \"Blank 11.05.2021\" \"BLANK 25.05.2021\" [49] \"Blank 27.05.2021\" \"Blank 02.06.2021\" \"BLANK 10.06.2021\" \"Blank 15.06.2021\" [53] \"Blank 21.06.2021\" \"Blank 28.06.2021\" \"Blank-5.6.2021\"   \"Blank 07.07.2021\" [57] \"Blank 15.07.2021\" \"BLANK 20.07.2021\" \"Blank 27.07.2021\" \"Blank-02.08.2021\" [61] \"BLANK 03.08.2021\" \"BLANK 04.08.2021\" \"BLANK 09.08.2021\" \"Blank 18.08.2021\" [65] \"BLANK 22.08.2021\" \"BLANK 25.08.2022\" \"BLANK 30.08.2021\" \"BLANK 01.09.2021\" [69] \"BLANK 08.09.2021\" \"BLANK 16.09.2021\" \"BLANK 19.09.2021\" \"BLANK 26.09.2021\" [73] \"BLANK 29.09.2021\" \"Blank 04.10.2021\" \"BLANK 10.10.2021\" \"BLANK 17.10.2022\" [77] \"Blank 21.10.2021\" \"Blank 27.10.2021\" \"Blank 01.11.2021\" \"Blank 07.11.2021\" [81] \"Blank 11.11.2021\" \"BLANK 17.11.2021\" \"BLANK 21.11.2021\" \"Blank 28.11.22\"   [85] \"Blank 01.12.2021\" \"BLANK 08.12.2021\" \"BLANK 12.12.2021\" \"BLANK 20.12.21\"   [89] \"BLANK 26.10.2021\" \"Blank 02.01.2022\" Number observations removed due to contaminated blanks: 445                18S       Ancylostoma       Campy_cpn60 Campylobacter_16S                 21                 2                 2                 1  Campylobacter_pan      Enterobacter     Hs99999901_s1    M_tuberculosis                  4                13                62                 1              MS2_1             MS2_2            pan_PV            PhHV_1                153                16                 2               147             PhHV_2     Shigella_EIEC     Strongyloides                 19                 1                 1  Editing ct_value responses based on amplification controls [==============================================] 100% | Elapsed: 00:13:58 | Remaining:  0s  Cleaning up remaining 'Undetermined' observations Parsing sample id Final data: 'data.frame':   153652 obs. of  10 variables:  $ experiment_name   : chr  \"G- ES TAC CARD 01\" \"G- ES TAC CARD 01\" \"G- ES TAC CARD 01\" \"G- ES TAC CARD 01\" ...  $ experiment_barcode: chr  \"B25430408\" \"B25430408\" \"B25430408\" \"B25430408\" ...  $ experiment_date   : IDate, format: \"2019-06-19\" \"2019-06-19\" ...  $ well              : int  1 1 2 2 3 3 4 5 6 7 ...  $ well_position     : chr  \"A1\" \"A1\" \"A2\" \"A2\" ...  $ sample_id         : chr  \"ES08010-09JUN19-ES080101001-ES_TNA-217283-\" \"ES08010-09JUN19-ES080101001-ES_TNA-217283-\" \"ES08010-09JUN19-ES080101001-ES_TNA-217283-\" \"ES08010-09JUN19-ES080101001-ES_TNA-217283-\" ...  $ sample_date       : Date, format: \"2019-06-09\" \"2019-06-09\" ...  $ aquaprobe_id      : chr  \"ES080101001\" \"ES080101001\" \"ES080101001\" \"ES080101001\" ...  $ target_name       : chr  \"Ancylostoma\" \"Necator\" \"E_bieneusi\" \"E_intestinalis\" ...  $ ct_value          : num  40 40 40 40 31.1 ... Compiled TAC data is here: /Users/johngiles/tests/test/tac/compiled_tac.csv"},{"path":"https://gilesjohnr.github.io/es.dhaka/articles/processing_es_data.html","id":"parse-aquaprobe-data","dir":"Articles","previous_headings":"","what":"Parse Aquaprobe data","title":"Processing data with the `es.dhaka` package","text":"","code":"root <- '{path to Dropbox}/ES TAC/'  paths_aqua <- c(      file.path(root, \"TAC final QC MT/Aquaprobe/COVID-19 AQUAPROBE & WATER COLLECTION DATA.xlsx\"),      file.path(root, \"TAC final QC MT/Aquaprobe/AQUAPROBE2.xlsx\"),      file.path(root, \"TAC final QC MT/Aquaprobe/Missing AquaProbe Data.xlsx\") )  parse_aquaprobe_xlsx(      path_in = paths_aqua,      path_out = \"./test/aqua\" )  ./TAC final QC MT/Aquaprobe/COVID-19 AQUAPROBE & WATER COLLECTION DATA.xlsx ./TAC final QC MT/Aquaprobe/AQUAPROBE2.xlsx ./TAC final QC MT/Aquaprobe/Missing AquaProbe Data.xlsx Input .xlsx files: 3                                                              Parsed .csv files: 3 Output here: ./test/aqua/raw/csv"},{"path":"https://gilesjohnr.github.io/es.dhaka/articles/processing_es_data.html","id":"compile-aquaprobe-data","dir":"Articles","previous_headings":"","what":"Compile Aquaprobe data","title":"Processing data with the `es.dhaka` package","text":"","code":"compile_aquaprobe_data(      path_in = c(\"./test/aqua/raw/csv/COVID-19 AQUAPROBE & WATER COLLECTION DATA.csv\",                  \"./test/aqua/raw/csv/AQUAPROBE2.csv\",                  \"./test/aqua/raw/csv/Missing AquaProbe Data.csv\"),      path_out = \"./test/aqua\" )  ./test/aqua/raw/csv/COVID-19 AQUAPROBE & WATER COLLECTION DATA.csv ./test/aqua/raw/csv/AQUAPROBE2.csv ./test/aqua/raw/csv/Missing AquaProbe Data.csv Consolidating duplicated measurements Converting dates Converting spatial coordinates Cleaning up Compiled aquaprobe data is here: ./test/aqua/compiled_aquaprobe.csv"},{"path":"https://gilesjohnr.github.io/es.dhaka/articles/processing_es_data.html","id":"merge-compiled-tac-data-and-compiled-aquaprobe-data","dir":"Articles","previous_headings":"","what":"Merge compiled TAC data and compiled Aquaprobe data","title":"Processing data with the `es.dhaka` package","text":"","code":"compiled_tac <- as.data.frame(data.table::fread('./test/tac/compiled_tac.csv')) compiled_aqua <- as.data.frame(data.table::fread('./test/aqua/compiled_aquaprobe.csv'))  d <- merge(compiled_tac, compiled_aqua, by='aquaprobe_id') data.table::fwrite(d, file='./test/compiled.csv')  str(d) 'data.frame':   151352 obs. of  37 variables:  $ aquaprobe_id                       : chr  \"E0108010001\" \"E0108010001\" \"E0108010001\" \"E0108010001\" ...  $ experiment_name                    : chr  \"ES QADRI ENTERIC CARD 04\" \"ES QADRI ENTERIC CARD 04\" \"ES QADRI ENTERIC CARD 04\" \"ES QADRI ENTERIC CARD 04\" ...  $ experiment_barcode                 : chr  \"B41120251\" \"B41120251\" \"B41120251\" \"B41120251\" ...  $ experiment_date                    : IDate, format: \"2021-02-02\" ...  $ well                               : int  119 116 118 97 98 117 97 99 100 98 ...  $ well_position                      : chr  \"E23\" \"E20\" \"E22\" \"E1\" ...  $ sample_id                          : chr  \"E010801-02NOV20-E0108010001-ES-COV-TNA-249076-\" \"E010801-02NOV20-E0108010001-ES-COV-TNA-249076-\" \"E010801-02NOV20-E0108010001-ES-COV-TNA-249076-\" \"E010801-02NOV20-E0108010001-ES-COV-TNA-249076-\" ...  $ sample_date                        : IDate, format: \"2020-11-02\" ...  $ target_name                        : chr  \"Norovirus_GI\" \"PhHV_1\" \"Sapovirus_124\" \"Schistosoma\" ...  $ ct_value                           : num  31.3 NA 29.7 NA NA ...  $ temperature                        : num  28.7 28.7 28.7 28.7 28.7 28.7 28.7 28.7 28.7 28.7 ...  $ barometric_pressure                : num  1015 1015 1015 1015 1015 ...  $ depth                              : num  0.025 0.025 0.025 0.025 0.025 ...  $ ph                                 : num  7.58 7.58 7.58 7.58 7.58 7.58 7.58 7.58 7.58 7.58 ...  $ ph_millivolt                       : num  -58 -58 -58 -58 -58 ...  $ oxidation_reduction_potential      : num  -74.8 -74.8 -74.8 -74.8 -74.8 ...  $ dissolved_oxygen_percent_saturation: num  19 19 19 19 19 19 19 19 19 19 ...  $ dissolved_oxygen_mg_l              : num  1.47 1.47 1.47 1.47 1.47 1.47 1.47 1.47 1.47 1.47 ...  $ electrical_conductivity            : num  546 546 546 546 546 ...  $ resistivity                        : num  1710 1710 1710 1710 1710 ...  $ total_dissolved_solids             : num  354 354 354 354 354 354 354 354 354 354 ...  $ salinity                           : num  0.23 0.23 0.23 0.23 0.23 0.23 0.23 0.23 0.23 0.23 ...  $ specific_gravity                   : num  0 0 0 0 0 0 0 0 0 0 ...  $ turbidity                          : num  167 167 167 167 167 167 167 167 167 167 ...  $ altitude                           : num  4.5 4.5 4.5 4.5 4.5 4.5 4.5 4.5 4.5 4.5 ...  $ location_name                      : chr  \"SWITCH GATE, BERIBADH\" \"SWITCH GATE, BERIBADH\" \"SWITCH GATE, BERIBADH\" \"SWITCH GATE, BERIBADH\" ...  $ ward_id                            : int  8 8 8 8 8 8 8 8 8 8 ...  $ location_id                        : int  1 1 1 1 1 1 1 1 1 1 ...  $ liters_water_collected             : num  6.5 6.5 6.5 6.5 6.5 6.5 6.5 6.5 6.5 6.5 ...  $ liters_water_through_filter        : num  6 6 6 6 6 6 6 6 6 6 ...  $ liters_water_left_in_bag           : num  0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 ...  $ aquaprobe_file_name                : chr  \"COVID-19 AQUAPROBE & WATER COLLECTION DATA\" \"COVID-19 AQUAPROBE & WATER COLLECTION DATA\" \"COVID-19 AQUAPROBE & WATER COLLECTION DATA\" \"COVID-19 AQUAPROBE & WATER COLLECTION DATA\" ...  $ aquaprobe_date                     : IDate, format: NA ...  $ lat_dms                            : chr  \"23d47'59.616\\\"\\\"N\" \"23d47'59.616\\\"\\\"N\" \"23d47'59.616\\\"\\\"N\" \"23d47'59.616\\\"\\\"N\" ...  $ lat_dd                             : num  23.8 23.8 23.8 23.8 23.8 ...  $ lon_dms                            : chr  \"90d20'37.308\\\"\\\"E\" \"90d20'37.308\\\"\\\"E\" \"90d20'37.308\\\"\\\"E\" \"90d20'37.308\\\"\\\"E\" ...  $ lon_dd                             : num  90.3 90.3 90.3 90.3 90.3 ..."},{"path":"https://gilesjohnr.github.io/es.dhaka/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"John R Giles. Maintainer.","code":""},{"path":"https://gilesjohnr.github.io/es.dhaka/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"c, email=\"john.giles@gatesfoundation.org\")) (2024). es.dhaka: Tools processing environmental sampling data collected Dhaka, Bangladesh. R package version 0.0.1, https://gilesjohnr.github.io/es.dhaka/, https://github.com/gilesjohnr/es.dhaka.","code":"@Manual{,   title = {es.dhaka: Tools for processing environmental sampling data collected in Dhaka, Bangladesh},   author = {{c} and {email=\"john.giles@gatesfoundation.org\"))}},   year = {2024},   note = {R package version 0.0.1, https://gilesjohnr.github.io/es.dhaka/},   url = {https://github.com/gilesjohnr/es.dhaka}, }"},{"path":"https://gilesjohnr.github.io/es.dhaka/index.html","id":"esdhaka-an-r-package-for-processing-environmental-sampling-data","dir":"","previous_headings":"","what":"Tools for processing environmental sampling data collected in Dhaka, Bangladesh","title":"Tools for processing environmental sampling data collected in Dhaka, Bangladesh","text":"package provides data methods parsing compiling data sets measure infectious disease burden using Environmental Sampling (ES) methods. tools developed specifically ES studies Dhaka, Bangladesh designed provide data outputs can used open-source companion package es can found . overview data methods outlined , detailed vignettes available .","code":""},{"path":"https://gilesjohnr.github.io/es.dhaka/index.html","id":"data","dir":"","previous_headings":"","what":"Data","title":"Tools for processing environmental sampling data collected in Dhaka, Bangladesh","text":"tools intended heavy lifting combining data multiple sources : Data .eds .xls format exported Applied Biosystems qPCR Systems using QuantStudio software. Data .xlsx format containing measurements Aquaread water monitoring instruments package also contains several important accessory data sets required building compiled data downstream analyses: Standard curve data Taqman card designs stored standard_curves data object. Standard curves necessary estimating number gene copies target (e.g. viral load), methods can found companion R package es. package also contains several data dictionaries referred key cross reference important information target names, location names, standard curve data sets. key_location_names: data cross reference unique (sometimes duplicated) location names sampling sites set ‘concise’ names clean characters allow combination duplicated locations. key_target_names: data cross reference unique (sometimes duplicated) target names across Taqman cards concise target names, relevant control samples, whether include target compiled data set. key_standard_curves: data cross reference unique experiment name appropriate standard curve data source.","code":""},{"path":"https://gilesjohnr.github.io/es.dhaka/index.html","id":"methods","dir":"","previous_headings":"","what":"Methods","title":"Tools for processing environmental sampling data collected in Dhaka, Bangladesh","text":"four main reproducible functions parse raw data compile results single clean format data set. functions parse_tac_xls compile_tac_data TAC data parse_aquaprobe_xlsx compile_aquaprobe_data Aquaprobe data. Parse card-level TAC data output produced QuantStudio software extract contents individual .csv files containing raw data. Compile card-level .csv files single data set. compiling, several QC operations performed: Excludes sensitive targets based key data dictionary included package. Parse sample IDs collection dates aquaprobe_id used merge Aquaprobe data. Edit duplicated target names based key data dictionary. Adjustments Ct values made using blank samples control contamination. Specifically, corresponding blank “Undetermined” pathogen particular sample, pathogen’s Ct value set NA samples card blank following two cards well. Adjustment Ct values based amplification controls. pathogen mapped corresponding control (MS2 RNA targets PhHV DNA targets) defined key data dictionary. amplification control sample positive (Ct < threshold 40), relevant targets sample “Undetermined” set threshold value (40 example). Remaining ‘Undetermined’ observations set NA. Parse Aquaprobe excel files .csv files consistent format. Compile raw Aquaprobe .csv files one data set. compilation several QC formatting tasks performed: Duplicated measurements consolidated taking mean variable. Dates converted standard date object. Spatial coordinates Degree Minute Second (DMS) format converted standard DMS format converted Decimal Degrees (DD). Aquaprode coded variable names translated readable variable names based variable descriptions www.aquaread.com/sensors.","code":""},{"path":[]},{"path":"https://gilesjohnr.github.io/es.dhaka/index.html","id":"id_1-check-dependencies","dir":"","previous_headings":"Installation","what":"1) Check dependencies","title":"Tools for processing environmental sampling data collected in Dhaka, Bangladesh","text":"data parsing functions package depend Python 3 Java. check install can try following: Download Python 3 check current installation : Download Java check current installation :","code":"user@computer:~$ python3 --version Python 3.11.5 user@computer:~$ java --version java 21.0.2 2024-01-16 LTS Java(TM) SE Runtime Environment (build 21.0.2+13-LTS-58) Java HotSpot(TM) 64-Bit Server VM (build 21.0.2+13-LTS-58, mixed mode, sharing)"},{"path":"https://gilesjohnr.github.io/es.dhaka/index.html","id":"id_2-install-from-github","dir":"","previous_headings":"Installation","what":"2) Install from Github","title":"Tools for processing environmental sampling data collected in Dhaka, Bangladesh","text":"Use devtools package install development version es.dhaka GitHub repository. R version >= 3.5.0 recommended.","code":"install.packages('devtools') devtools::install_github(\"gilesjohnr/es.dhaka\", dependencies=TRUE)"},{"path":"https://gilesjohnr.github.io/es.dhaka/index.html","id":"troubleshooting","dir":"","previous_headings":"","what":"Troubleshooting","title":"Tools for processing environmental sampling data collected in Dhaka, Bangladesh","text":"package currently development maintained John Giles (@gilesjohnr). general questions, contact John Giles (john.giles@gatesfoundation.org) /Jillian Gauld (jillian.gauld@gatesfoundation.org). Note software constructed Copyright 2024 Bill & Melinda Gates Foundation developed specific environmental sampling applications intended generalize perfectly settings.","code":""},{"path":"https://gilesjohnr.github.io/es.dhaka/index.html","id":"funding","dir":"","previous_headings":"","what":"Funding","title":"Tools for processing environmental sampling data collected in Dhaka, Bangladesh","text":"work developed Institute Disease Modeling support funded research grants made Bill & Melinda Gates Foundation.","code":""},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/compile_aquaprobe_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Compile aquaprobe data — compile_aquaprobe_data","title":"Compile aquaprobe data — compile_aquaprobe_data","text":"function consumes .csv files produced parse_aquaprobe_xlsx compiles single data set.","code":""},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/compile_aquaprobe_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compile aquaprobe data — compile_aquaprobe_data","text":"","code":"compile_aquaprobe_data(path_in, path_out, verbose = TRUE)"},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/compile_aquaprobe_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compile aquaprobe data — compile_aquaprobe_data","text":"path_in full file path directory containing parsed .csv files. path_out full file path location output files written. verbose Logical indicating whether print messages.","code":""},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/compile_aquaprobe_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compile aquaprobe data — compile_aquaprobe_data","text":"data.frame","code":""},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/compile_aquaprobe_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compile aquaprobe data — compile_aquaprobe_data","text":"","code":"if (FALSE) { compile_aquaprobe_data(path_in = \"/User/test/aquaprobe/raw/csv/input.csv\",                        path_out = \"/User/test/aquaprobe\") }"},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/compile_tac_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Compile TAC data — compile_tac_data","title":"Compile TAC data — compile_tac_data","text":"function consumes .csv files produced parse_taq_eds parse_taq_xls compiles single data set. compiling, duplicated names corrected defined data key data dictionary included package. Adjustments Ct values made using blank samples control contamination relevant RNA/DNA targets qPCR amplification controls.","code":""},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/compile_tac_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compile TAC data — compile_tac_data","text":"","code":"compile_tac_data(path_in, path_out, tau, key, verbose = TRUE)"},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/compile_tac_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compile TAC data — compile_tac_data","text":"path_in full file path directory containing parsed .csv files. path_out full file path location output files written. tau threshold Ct value amplification control. TAC, relevant amplification controls (e.g. MS2, PhHV) threshold, \"Undetermined\" responses can set threshold value. key data.frame containing mapping unique concise target names amplification controls. See esdata::key_dhaka template. verbose Logical indicating whether print messages. Default set TRUE.","code":""},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/compile_tac_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compile TAC data — compile_tac_data","text":"data.frame","code":""},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/compile_tac_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compile TAC data — compile_tac_data","text":"","code":"if (FALSE) { compile_tac_data(path_in = \"/User/test/rtac/raw/csv\",                  path_out = \"/User/test/rtac\",                  key = esdata::key_dhaka) }"},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/convert_date_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Aquaprobe data and time to consistent date format — convert_date_time","title":"Convert Aquaprobe data and time to consistent date format — convert_date_time","text":"function takes vector 'Date & Time' column Aquaprobe data, transforms consistent Date-class object. Note many dates column corrupted give NAs.","code":""},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/convert_date_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Aquaprobe data and time to consistent date format — convert_date_time","text":"","code":"convert_date_time(x)"},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/convert_date_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Aquaprobe data and time to consistent date format — convert_date_time","text":"x vector containing character strings 'Date & Time' column Aquaprobe data set","code":""},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/convert_date_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Aquaprobe data and time to consistent date format — convert_date_time","text":"vector","code":""},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/convert_date_time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Aquaprobe data and time to consistent date format — convert_date_time","text":"","code":"if (FALSE) { convert_date_time(df$`Date & Time`) }"},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/convert_dms_to_dd.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Aquaprobe coordinates from DMS to DD — convert_dms_to_dd","title":"Convert Aquaprobe coordinates from DMS to DD — convert_dms_to_dd","text":"function takes character strings giving Latitude Longitude Aquaprobe .xlsx files, returns spatial coordinates Degree Minute Second (DMS) Decimal Degree (DD) formats.","code":""},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/convert_dms_to_dd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Aquaprobe coordinates from DMS to DD — convert_dms_to_dd","text":"","code":"convert_dms_to_dd(x)"},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/convert_dms_to_dd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Aquaprobe coordinates from DMS to DD — convert_dms_to_dd","text":"x vector containing character strings Latitude Longitude informal DMS format Dhaka aquaprobe .xlsx files.","code":""},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/convert_dms_to_dd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Aquaprobe coordinates from DMS to DD — convert_dms_to_dd","text":"List DMS DD formats","code":""},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/convert_dms_to_dd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Aquaprobe coordinates from DMS to DD — convert_dms_to_dd","text":"","code":"if (FALSE) { convert_dms_to_dd(df$Lat) }"},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/dot-init_pb.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize a progress bar — .init_pb","title":"Initialize a progress bar — .init_pb","text":"wrapper function 'progress' package initialize default progress bar long loops","code":""},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/dot-init_pb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize a progress bar — .init_pb","text":"","code":".init_pb(x)"},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/dot-init_pb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize a progress bar — .init_pb","text":"x Integer giving length loop","code":""},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/dot-init_pb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize a progress bar — .init_pb","text":"","code":"if (FALSE) {      len <- 100      pb <- .init_pb(len)      for (i in 1:len) {           pb$tick()           Sys.sleep(0.01)           } }"},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/key_location_names.html","id":null,"dir":"Reference","previous_headings":"","what":"A data dictionary for location names — key_location_names","title":"A data dictionary for location names — key_location_names","text":"data serve key cross reference unique (sometimes duplicated) location names sampling sites set 'concise' names clean characters allow combination duplicated locations.","code":""},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/key_location_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A data dictionary for location names — key_location_names","text":"","code":"key_location_names"},{"path":[]},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/key_location_names.html","id":"key-location-names","dir":"Reference","previous_headings":"","what":"key_location_names","title":"A data dictionary for location names — key_location_names","text":"data frame 2 columns: location_name_unique Original location name. location_name_concise associated concise location name typos duplicates removed.","code":""},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/key_standard_curves.html","id":null,"dir":"Reference","previous_headings":"","what":"A data dictionary linking experiment names to standard curve data — key_standard_curves","title":"A data dictionary linking experiment names to standard curve data — key_standard_curves","text":"data serve key cross reference unique experiment name appropriate standard curve data.","code":""},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/key_standard_curves.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A data dictionary linking experiment names to standard curve data — key_standard_curves","text":"","code":"key_standard_curves"},{"path":[]},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/key_standard_curves.html","id":"key-standard-curves","dir":"Reference","previous_headings":"","what":"key_standard_curves","title":"A data dictionary linking experiment names to standard curve data — key_standard_curves","text":"data frame 3 columns: experiment_date date experiment run. experiment_name name experiment (e.g. ES BEED TAC CARD 001, QADRI ENTERIC CARD 121). standard_curve_file_name standard curve file name associated given experiment name.","code":""},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/key_target_names.html","id":null,"dir":"Reference","previous_headings":"","what":"A data dictionary for target names — key_target_names","title":"A data dictionary for target names — key_target_names","text":"data serve key cross reference unique (sometimes duplicated) target names across Taqman cards appropriate concise target names, relevant control samples, whether include target compiled data set. key applies data collected Dhaka, Bangladesh, however, key may used template applications studies well.","code":""},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/key_target_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A data dictionary for target names — key_target_names","text":"","code":"key_target_names"},{"path":[]},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/key_target_names.html","id":"key-target-names","dir":"Reference","previous_headings":"","what":"key_target_names","title":"A data dictionary for target names — key_target_names","text":"data frame 4 columns: target_name_unique original target name found taqman array cards. May contain typos duplicates. target_name_concise associated concise target name typos duplicates removed. control amplification control target. MS2 RNA based targets PhHV DNA based targets. include Binary operator giving 1 targets included.","code":""},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/logmean.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the mean in log space — logmean","title":"Calculate the mean in log space — logmean","text":"function gives mean taken log-scale set numeric values. Values less equal zero ignored NA. Best suited values taken highly skewed distribution, Ct values often .","code":""},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/logmean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the mean in log space — logmean","text":"","code":"logmean(x)"},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/logmean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the mean in log space — logmean","text":"x vector containing numeric values","code":""},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/logmean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the mean in log space — logmean","text":"Scalar","code":""},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/logmean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the mean in log space — logmean","text":"","code":"if (FALSE) {  logmean(c(24.3, 10.3, 40, NA, 0, -1, 0.05))  }"},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/parse_aquaprobe_xlsx.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse Aquaprobe .xlsx files — parse_aquaprobe_xlsx","title":"Parse Aquaprobe .xlsx files — parse_aquaprobe_xlsx","text":"function takes .xlsx file path (vector file paths) extracts contents individual csv files containing raw data.","code":""},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/parse_aquaprobe_xlsx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse Aquaprobe .xlsx files — parse_aquaprobe_xlsx","text":"","code":"parse_aquaprobe_xlsx(path_in, path_out, verbose = TRUE)"},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/parse_aquaprobe_xlsx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse Aquaprobe .xlsx files — parse_aquaprobe_xlsx","text":"path_in full file path directory containing .xlsx files. path_out full file path location output files written. verbose Logical indicating whether print messages.","code":""},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/parse_aquaprobe_xlsx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse Aquaprobe .xlsx files — parse_aquaprobe_xlsx","text":"data.frame","code":""},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/parse_aquaprobe_xlsx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse Aquaprobe .xlsx files — parse_aquaprobe_xlsx","text":"","code":"if (FALSE) { parse_aquaprobe_xlsx(path_in = c(\"/User/test/dir1\", \"/Users/test/dir2\"),                      path_out = \"/User/test\") }"},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/parse_tac_eds.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse Taqman .eds files — parse_tac_eds","title":"Parse Taqman .eds files — parse_tac_eds","text":"function takes directory .eds files produced QuantStudio software extracts contents xml txt files containing raw data experiment metadata.","code":""},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/parse_tac_eds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse Taqman .eds files — parse_tac_eds","text":"","code":"parse_tac_eds(path_in, path_out = NULL)"},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/parse_tac_eds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse Taqman .eds files — parse_tac_eds","text":"path_in full file path directory containing .eds files. path_out full file path location output files written.","code":""},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/parse_tac_eds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse Taqman .eds files — parse_tac_eds","text":"","code":"if (FALSE) { parse_tac_eds(path_in = \"/User/test/dir1\",               path_out = \"/User/test\") }"},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/parse_tac_xls.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse Taqman .xls files — parse_tac_xls","title":"Parse Taqman .xls files — parse_tac_xls","text":"function takes directory .xls files produced QuantStudio software extracts contents individual csv files containing raw data.","code":""},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/parse_tac_xls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse Taqman .xls files — parse_tac_xls","text":"","code":"parse_tac_xls(path_in, path_out, verbose = TRUE)"},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/parse_tac_xls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse Taqman .xls files — parse_tac_xls","text":"path_in full file path directory containing .xls files. path_out full file path location output files written. verbose Logical indicating whether print messages.","code":""},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/parse_tac_xls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse Taqman .xls files — parse_tac_xls","text":"data.frame","code":""},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/parse_tac_xls.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse Taqman .xls files — parse_tac_xls","text":"","code":"if (FALSE) { parse_tac_xls(path_in = c(\"/User/test/dir1\", \"/Users/test/dir2\"),               path_out = \"/User/test\") }"},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/standard_curves.html","id":null,"dir":"Reference","previous_headings":"","what":"Standard curve data for Dhaka analyses — standard_curves","title":"Standard curve data for Dhaka analyses — standard_curves","text":"data provide standard curve relationship viral load qPCR Ct value. data pertain analyses run samples Dhaka, Bangladesh. However, format data can replicated modeling viral load data sources.","code":""},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/standard_curves.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standard curve data for Dhaka analyses — standard_curves","text":"","code":"standard_curves"},{"path":[]},{"path":"https://gilesjohnr.github.io/es.dhaka/reference/standard_curves.html","id":"standard-curves","dir":"Reference","previous_headings":"","what":"standard_curves","title":"Standard curve data for Dhaka analyses — standard_curves","text":"data frame 4 columns: target_name_unique original target name found taqman array cards. May contain typos duplicates. target_name_concise associated concise target name typos duplicates removed. ct_value Ct value attained particular viral load dilution. one Ct value produced particular card design, mean log space taken. quantity number viral copies particular dilution.","code":""}]
